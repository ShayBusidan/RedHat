2020-11-29 14:36:38,080 IL008270-TP WARN org.springframework.context.support.AbstractApplicationContext [main] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'text301UserPrivilegesQueryService': Unsatisfied dependency expressed through field 'text301UserPrivilegesRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'text301UserPrivilegesRepository': Invocation of init method failed; nested exception is java.lang.IllegalStateException: Using named parameters for method public abstract lekach.microservice.domain.model.aggregates.UsersPrivileges lekach.microservice.infrastructure.repositories.Text301UserPrivilegesRepository.getPrivilegeByCodeIshurAndServNum(lekach.microservice.interfaces.rest.dto.HeaderData,lekach.microservice.domain.model.aggregates.Users) but parameter 'Optional[users]' not found in annotated query 'select u from UsersPrivileges u WHERE (u.text301UserPrivilegesFields.codeIshur = :#{users.codeIshur}) AND (u.text301UserPrivilegesFields.verificationBy =:#{#headerData.subQueryType}) AND (u.text301UserPrivilegesFields.authServiceId = :#{#headerData.authServiceId}) AND (u.text301UserPrivilegesFields.custId = :#{#headerData.custId}) AND (u.text301UserPrivilegesFields.cancelDate = :#{'1900-01-01'})'!
2020-11-29 14:36:38,115 IL008270-TP ERROR org.springframework.boot.SpringApplication [main] Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'text301UserPrivilegesQueryService': Unsatisfied dependency expressed through field 'text301UserPrivilegesRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'text301UserPrivilegesRepository': Invocation of init method failed; nested exception is java.lang.IllegalStateException: Using named parameters for method public abstract lekach.microservice.domain.model.aggregates.UsersPrivileges lekach.microservice.infrastructure.repositories.Text301UserPrivilegesRepository.getPrivilegeByCodeIshurAndServNum(lekach.microservice.interfaces.rest.dto.HeaderData,lekach.microservice.domain.model.aggregates.Users) but parameter 'Optional[users]' not found in annotated query 'select u from UsersPrivileges u WHERE (u.text301UserPrivilegesFields.codeIshur = :#{users.codeIshur}) AND (u.text301UserPrivilegesFields.verificationBy =:#{#headerData.subQueryType}) AND (u.text301UserPrivilegesFields.authServiceId = :#{#headerData.authServiceId}) AND (u.text301UserPrivilegesFields.custId = :#{#headerData.custId}) AND (u.text301UserPrivilegesFields.cancelDate = :#{'1900-01-01'})'!
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:845)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:742)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:389)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:311)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1213)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1202)
	at lekach.microservice.ExtInfCheckAuthenticationApplication.main(ExtInfCheckAuthenticationApplication.java:9)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'text301UserPrivilegesRepository': Invocation of init method failed; nested exception is java.lang.IllegalStateException: Using named parameters for method public abstract lekach.microservice.domain.model.aggregates.UsersPrivileges lekach.microservice.infrastructure.repositories.Text301UserPrivilegesRepository.getPrivilegeByCodeIshurAndServNum(lekach.microservice.interfaces.rest.dto.HeaderData,lekach.microservice.domain.model.aggregates.Users) but parameter 'Optional[users]' not found in annotated query 'select u from UsersPrivileges u WHERE (u.text301UserPrivilegesFields.codeIshur = :#{users.codeIshur}) AND (u.text301UserPrivilegesFields.verificationBy =:#{#headerData.subQueryType}) AND (u.text301UserPrivilegesFields.authServiceId = :#{#headerData.authServiceId}) AND (u.text301UserPrivilegesFields.custId = :#{#headerData.custId}) AND (u.text301UserPrivilegesFields.cancelDate = :#{'1900-01-01'})'!
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1778)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1171)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 19 common frames omitted
Caused by: java.lang.IllegalStateException: Using named parameters for method public abstract lekach.microservice.domain.model.aggregates.UsersPrivileges lekach.microservice.infrastructure.repositories.Text301UserPrivilegesRepository.getPrivilegeByCodeIshurAndServNum(lekach.microservice.interfaces.rest.dto.HeaderData,lekach.microservice.domain.model.aggregates.Users) but parameter 'Optional[users]' not found in annotated query 'select u from UsersPrivileges u WHERE (u.text301UserPrivilegesFields.codeIshur = :#{users.codeIshur}) AND (u.text301UserPrivilegesFields.verificationBy =:#{#headerData.subQueryType}) AND (u.text301UserPrivilegesFields.authServiceId = :#{#headerData.authServiceId}) AND (u.text301UserPrivilegesFields.custId = :#{#headerData.custId}) AND (u.text301UserPrivilegesFields.cancelDate = :#{'1900-01-01'})'!
	at org.springframework.data.jpa.repository.query.JpaQueryMethod.assertParameterNamesInAnnotatedQuery(JpaQueryMethod.java:125)
	at org.springframework.data.jpa.repository.query.JpaQueryMethod.<init>(JpaQueryMethod.java:104)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:79)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lookupQuery(RepositoryFactorySupport.java:566)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(RepositoryFactorySupport.java:559)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Collections.java:1054)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.mapMethodsToQuery(RepositoryFactorySupport.java:561)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$new$0(RepositoryFactorySupport.java:551)
	at java.base/java.util.Optional.map(Optional.java:265)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.<init>(RepositoryFactorySupport.java:551)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:324)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:297)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:211)
	at org.springframework.data.util.Lazy.get(Lazy.java:94)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:300)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:121)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	... 29 common frames omitted
2020-11-29 14:39:03,382 IL008270-TP WARN org.springframework.context.support.AbstractApplicationContext [main] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'text301UserPrivilegesQueryService': Unsatisfied dependency expressed through field 'text301UserPrivilegesRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'text301UserPrivilegesRepository': Invocation of init method failed; nested exception is java.lang.IllegalStateException: Using named parameters for method public abstract lekach.microservice.domain.model.aggregates.UsersPrivileges lekach.microservice.infrastructure.repositories.Text301UserPrivilegesRepository.getPrivilegeByCodeIshurAndServNum(lekach.microservice.interfaces.rest.dto.HeaderData,lekach.microservice.domain.model.aggregates.Users) but parameter 'Optional[users]' not found in annotated query 'select u from UsersPrivileges u WHERE (u.text301UserPrivilegesFields.codeIshur = :#{users.codeIshur}) AND (u.text301UserPrivilegesFields.verificationBy =:#{#headerData.subQueryType}) AND (u.text301UserPrivilegesFields.authServiceId = :#{#headerData.authServiceId}) AND (u.text301UserPrivilegesFields.custId = :#{#headerData.custId}) AND (u.text301UserPrivilegesFields.cancelDate = :#{'1900-01-01'})'!
2020-11-29 14:39:03,411 IL008270-TP ERROR org.springframework.boot.SpringApplication [main] Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'text301UserPrivilegesQueryService': Unsatisfied dependency expressed through field 'text301UserPrivilegesRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'text301UserPrivilegesRepository': Invocation of init method failed; nested exception is java.lang.IllegalStateException: Using named parameters for method public abstract lekach.microservice.domain.model.aggregates.UsersPrivileges lekach.microservice.infrastructure.repositories.Text301UserPrivilegesRepository.getPrivilegeByCodeIshurAndServNum(lekach.microservice.interfaces.rest.dto.HeaderData,lekach.microservice.domain.model.aggregates.Users) but parameter 'Optional[users]' not found in annotated query 'select u from UsersPrivileges u WHERE (u.text301UserPrivilegesFields.codeIshur = :#{users.codeIshur}) AND (u.text301UserPrivilegesFields.verificationBy =:#{#headerData.subQueryType}) AND (u.text301UserPrivilegesFields.authServiceId = :#{#headerData.authServiceId}) AND (u.text301UserPrivilegesFields.custId = :#{#headerData.custId}) AND (u.text301UserPrivilegesFields.cancelDate = :#{'1900-01-01'})'!
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:845)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:742)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:389)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:311)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1213)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1202)
	at lekach.microservice.ExtInfCheckAuthenticationApplication.main(ExtInfCheckAuthenticationApplication.java:9)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'text301UserPrivilegesRepository': Invocation of init method failed; nested exception is java.lang.IllegalStateException: Using named parameters for method public abstract lekach.microservice.domain.model.aggregates.UsersPrivileges lekach.microservice.infrastructure.repositories.Text301UserPrivilegesRepository.getPrivilegeByCodeIshurAndServNum(lekach.microservice.interfaces.rest.dto.HeaderData,lekach.microservice.domain.model.aggregates.Users) but parameter 'Optional[users]' not found in annotated query 'select u from UsersPrivileges u WHERE (u.text301UserPrivilegesFields.codeIshur = :#{users.codeIshur}) AND (u.text301UserPrivilegesFields.verificationBy =:#{#headerData.subQueryType}) AND (u.text301UserPrivilegesFields.authServiceId = :#{#headerData.authServiceId}) AND (u.text301UserPrivilegesFields.custId = :#{#headerData.custId}) AND (u.text301UserPrivilegesFields.cancelDate = :#{'1900-01-01'})'!
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1778)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1171)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 19 common frames omitted
Caused by: java.lang.IllegalStateException: Using named parameters for method public abstract lekach.microservice.domain.model.aggregates.UsersPrivileges lekach.microservice.infrastructure.repositories.Text301UserPrivilegesRepository.getPrivilegeByCodeIshurAndServNum(lekach.microservice.interfaces.rest.dto.HeaderData,lekach.microservice.domain.model.aggregates.Users) but parameter 'Optional[users]' not found in annotated query 'select u from UsersPrivileges u WHERE (u.text301UserPrivilegesFields.codeIshur = :#{users.codeIshur}) AND (u.text301UserPrivilegesFields.verificationBy =:#{#headerData.subQueryType}) AND (u.text301UserPrivilegesFields.authServiceId = :#{#headerData.authServiceId}) AND (u.text301UserPrivilegesFields.custId = :#{#headerData.custId}) AND (u.text301UserPrivilegesFields.cancelDate = :#{'1900-01-01'})'!
	at org.springframework.data.jpa.repository.query.JpaQueryMethod.assertParameterNamesInAnnotatedQuery(JpaQueryMethod.java:125)
	at org.springframework.data.jpa.repository.query.JpaQueryMethod.<init>(JpaQueryMethod.java:104)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:79)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lookupQuery(RepositoryFactorySupport.java:566)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(RepositoryFactorySupport.java:559)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Collections.java:1054)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.mapMethodsToQuery(RepositoryFactorySupport.java:561)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$new$0(RepositoryFactorySupport.java:551)
	at java.base/java.util.Optional.map(Optional.java:265)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.<init>(RepositoryFactorySupport.java:551)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:324)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:297)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:211)
	at org.springframework.data.util.Lazy.get(Lazy.java:94)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:300)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:121)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	... 29 common frames omitted
